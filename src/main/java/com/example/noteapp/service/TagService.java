package com.example.noteapp.service;

import com.example.noteapp.model.Tag;
import com.example.noteapp.repository.TagRepository;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

@Service
public class TagService {

    private final TagRepository tagRepository;

    public TagService(TagRepository tagRepository) {
        this.tagRepository = tagRepository;
    }

    public List<Tag> getAllTags() {
        return tagRepository.findAll();
    }

    public Tag createTag(String name, boolean isAutoGenerated) {
        Optional<Tag> existingTag = tagRepository.findByName(name);
        if (existingTag.isPresent()) {
            return existingTag.get(); // Возвращаем существующий тег
        }
        Tag tag = new Tag();
        tag.setName(name);
        tag.setAutoGenerated(isAutoGenerated);
        return tagRepository.save(tag);
    }

    public void deleteTagById(UUID id) {
        tagRepository.deleteById(id);
    }

    public Tag getTagByName(String name) {
        return tagRepository.findByName(name).orElse(null);
    }

    public String tagName(Tag tag) {
        return tag.getName();
    }
    public List<String> tagNameList(List<Tag> tags) {
        List<String> tagNames = new ArrayList<>();
        for (Tag tag : tags) {
            tagNames.add(tag.getName());
        }
        return tagNames;
    }

    public Tag findOrCreateTag(String tagName, boolean isAutoGenerated) {
        Optional<Tag> existingTag = tagRepository.findByName(tagName);
        if (existingTag.isPresent()) {
            return existingTag.get();
        }else{
            Tag tag = new Tag();
            tag.setName(tagName);
            tag.setAutoGenerated(isAutoGenerated);
            return tagRepository.save(tag);
        }

    }
    public List<Tag> getTagsByName(List<String> tags) {
        List<Tag> tagList = new ArrayList<>();
        for (String tagName : tags) {
            Tag tag = findOrCreateTag(tagName, false);
            tagList.add(tag);
        }
        return tagList;
    }
}

